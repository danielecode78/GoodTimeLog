<div class="modal fade" id="schedaZoom" tabindex="-1" aria-labelledby="titoloScheda" aria-describedby="modalDescrizione" aria-hidden="true" role="dialog">
  <div class="modal-dialog modal-xl modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="titoloScheda">Mappa esperienze</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Chiudi"></button>
      </div>
      <div id="modalDescrizione" class="visually-hidden">
        Seleziona una categoria per filtrare le esperienze sulla mappa. La mappa mostra i risultati in base alla selezione.
      </div>
      <div style="margin-top: 16px; margin-left: 16px">
        <div class="d-flex flex-wrap gap-2">
          <button onclick='updateMap("")' class="btn btn-secondary" aria-label="Mostra tutte le esperienze">Tutti</button>
          <button onclick='updateMap("Cibo")' class="btn btn-danger" aria-label="Filtra per Cibo">Cibo</button>
          <button onclick='updateMap("Dormire")' class="btn btn-primary" aria-label="Filtra per Dormire">Dormire</button>
          <button onclick='updateMap("Natura")' class="btn btn-success" aria-label="Filtra per Natura">Natura</button>
          <button onclick='updateMap("Museo")' class="btn bg-museum" aria-label="Filtra per Museo">Museo</button>
          <button onclick='updateMap("Città")' class="btn btn-warning" aria-label="Filtra per Esperienze in Città">Città</button>
          <button onclick='updateMap("Per bambini")' class="btn bg-pink" aria-label="Filtra per Esperienze per bambini">Per bambini</button>
        </div>
      </div>
      <div class="modal-body">
        <div id="map" class="w-100" style="height: 80vh"></div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
          Chiudi
        </button>
      </div>
    </div>
  </div>
</div>
<script>
  let map;
  let markerGroup;
  const modal = document.getElementById("schedaZoom");
  const dateit = (element) => {
    let finaldate = "Data non inserita";
    if (element) {
      const arrdate = element.split("-");
      finaldate = `${arrdate[2]}-${arrdate[1]}-${arrdate[0]}`;
    }
    return finaldate;
  };

  const updateMap = (category) => {
    if (markerGroup) {
      markerGroup.clearLayers();
    }
    const bounds = L.latLngBounds([]);
    const diary = <%- JSON.stringify(diary) %>;
    fetch(
        `/experiences/showMap?diary=${JSON.stringify(diary)}&category=${category}`
      )
      .then((res) => res.json())
      .then((data) => {
        markerGroup = L.layerGroup().addTo(map);

        data.forEach((el) => {
          const coords = el.coordinates;
          const lat = coords.lat;
          const lon = coords.lon;
          if (typeof lat === "number" && typeof lon === "number") {
            const marker = L.marker([lat, lon]);
            marker.bindPopup(`
  <div class="card text-center" role="region" aria-label="Scheda esperienza">
    <ul class="list-group list-group-flush">
      <li class="list-group-item">
        <h5><time datetime="${el.date}">${dateit(el.date)}</time></h5>
        <h5 aria-label="Titolo esperienza"><strong>${el.description}</strong></h5>
      </li>
      <li class="list-group-item">
        <h6>presso ${el.title}</h6>
        <span class="d-inline">${el.location}</span>
        <a href="https://www.google.com/maps/search/?api=1&query=${el.title}"
           target="_blank"
           rel="noopener noreferrer"
           aria-label="Apri ${el.title} su Google Maps">
          <i class="fas fa-map-marker-alt" aria-hidden="true"></i> Vedi su Google Maps
        </a>
      </li>
      <li class="list-group-item d-flex justify-content-center">
        <p class="starability-result" aria-label="valutazione" data-rating="${el.rate}">
        </p>
      </li>
      <li class="list-group-item">
      <a href="/experiences/${el._id}" class="btn btn-primary btn-sm mb-2 mb-md-0 text-white w-100" aria-label="Mostra dettagli esperienza">
      <i class="bi bi-search"></i>
    </a>
    </li>
    </ul>
  </div>
`);
            marker.addTo(markerGroup);
            bounds.extend(marker.getLatLng());
          }
        });
        if (data.length < 1) {
          map.setView([41.8961, 12.4906], 5);
        } else {
          map.fitBounds(bounds);
        }
      })
      .catch((err) => console.error("Errore nel fetch:", err));
  };

  modal.addEventListener("shown.bs.modal", function() {
    if (!map) {
      map = L.map("map").setView([41.8961, 12.4906], 5);
      L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
        attribution: "© OpenStreetMap contributors",
      }).addTo(map);
    }
    updateMap("");
  });
</script>